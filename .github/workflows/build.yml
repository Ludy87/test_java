name: "Build & Docker Test"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  pull_request_review:
    types: [submitted]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write

    strategy:
      fail-fast: false
      matrix:
        jdk-version: [17, 21]

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up JDK ${{ matrix.jdk-version }}
        uses: actions/setup-java@7a6d8a8234af8eb26422e24e3006232cccaa061b # v4.6.0
        with:
          java-version: ${{ matrix.jdk-version }}
          distribution: "temurin"

      - if: github.event.pull_request.user.login != 'dependabot[bot]'
        run: |
          # Generate verification metadata with signatures and checksums
          ./gradlew clean dependencies buildEnvironment spotlessApply --write-verification-metadata sha256 --refresh-dependencies help
          ./gradlew clean dependencies buildEnvironment spotlessApply --write-verification-metadata pgp,sha256 --refresh-keys --export-keys --refresh-dependencies help

      - name: Build with Gradle and no spring security
        run: ./gradlew clean build 2>gradle-error.log || echo $? > gradle-exit-code-false.txt
        env:
          DOCKER_ENABLE_SECURITY: false

      - name: Build with Gradle and with spring security
        run: ./gradlew clean build 2>gradle-error.log || echo $? > gradle-exit-code-true.txt
        env:
          DOCKER_ENABLE_SECURITY: true

      - name: Check Gradle Build Status
        run: |
          if [ -f gradle-exit-code-false.txt ] && [ -s gradle-exit-code-false.txt ]; then
            # Lesen Sie den Fehlercode und die Fehlerausgabe
            exit_code_false=$(cat gradle-exit-code-false.txt || echo "unknown")
            error_output_false=$(cat gradle-error.log 2>/dev/null | tr '\n' ' ' | tr -d '\r' || echo "No error output captured.")

            # Erstellen Sie eine Ausgabe fÃ¼r den nÃ¤chsten Schritt
            echo "exit_code_false=$exit_code_false" >> $GITHUB_ENV
            echo "error_output_false=$error_output_false" >> $GITHUB_ENV
          else
            echo "exit_code_false=" >> $GITHUB_ENV
            echo "error_output_false=" >> $GITHUB_ENV
          fi

          if [ -f gradle-exit-code-true.txt ] && [ -s gradle-exit-code-true.txt ]; then
            # Lesen Sie den Fehlercode und die Fehlerausgabe
            exit_code_true=$(cat gradle-exit-code-true.txt || echo "unknown")
            error_output_true=$(cat gradle-error.log 2>/dev/null | tr '\n' ' ' | tr -d '\r' || echo "No error output captured.")

            # Erstellen Sie eine Ausgabe fÃ¼r den nÃ¤chsten Schritt
            echo "exit_code_true=$exit_code_true" >> $GITHUB_ENV
            echo "error_output_true=$error_output_true" >> $GITHUB_ENV
          else
            echo "exit_code_true=" >> $GITHUB_ENV
            echo "error_output_true=" >> $GITHUB_ENV
          fi

      - name: Post Comment to PR
        if: env.exit_code_true && github.event_name == 'pull_request'
        run: |
          if echo "${{ env.error_output_false }}" | grep -q 'dependency-verification-report.html' || \
            echo "${{ env.error_output_true }}" | grep -q 'dependency-verification-report.html'; then

            echo Test

            # gh pr comment ${{ github.event.pull_request.number }} \
            #   --body "ðŸš¨ **Gradle Build Failed** ðŸš¨

            # **Exit Code:** ${{ env.exit_code_true }}

            # <details>
            # <summary>Build Logs with spring security</summary>

            # \`\`\`
            # ${{ env.error_output_true }}
            # \`\`\`

            # </details>

            # **Exit Code:** ${{ env.exit_code_false }}

            # <details>
            # <summary>Build Logs without spring security</summary>

            # \`\`\`
            # ${{ env.error_output_false }}
            # \`\`\`

            # </details>
            # "
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: test-reports-jdk-${{ matrix.jdk-version }}
          path: |
            gradle-error.log
            build/reports/tests/
            build/test-results/
            build/reports/problems/
          retention-days: 3

      - name: Fail job if errors found
        if: env.FAIL_JOB == 'true'
        run: |
          echo "Failing the job because errors were detected."
          exit 1

  docker-compose-tests:
    # if: github.event_name == 'push' && github.ref == 'refs/heads/main' ||
    #     (github.event_name == 'pull_request' &&
    #     contains(github.event.pull_request.labels.*.name, 'licenses') == false &&
    #     (
    #       contains(github.event.pull_request.labels.*.name, 'Front End') ||
    #       contains(github.event.pull_request.labels.*.name, 'Java') ||
    #       contains(github.event.pull_request.labels.*.name, 'Back End') ||
    #       contains(github.event.pull_request.labels.*.name, 'Security') ||
    #       contains(github.event.pull_request.labels.*.name, 'API') ||
    #       contains(github.event.pull_request.labels.*.name, 'Docker') ||
    #       contains(github.event.pull_request.labels.*.name, 'Test')
    #     )
    #     )

    runs-on: ubuntu-latest

    permissions:
      pull-requests: write

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
        with:
          egress-policy: audit

      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Java 17
        uses: actions/setup-java@7a6d8a8234af8eb26422e24e3006232cccaa061b # v4.6.0
        with:
          java-version: "17"
          distribution: "adopt"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0

      - name: Install Docker Compose
        run: |
          sudo curl -SL "https://github.com/docker/compose/releases/download/v2.32.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Set up Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: "3.12"
          cache: 'pip' # caching pip dependencies

      - name: Pip requirements
        run: |
          pip install --require-hashes -r ./cucumber/requirements.txt

      - run: echo ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}

      - name: Run Docker Compose Tests
        run: |
          # chmod +x ./cucumber/test_webpages.sh
          chmod +x ./test.sh
          ./test.sh "${{ github.event.pull_request.user.login 1= 'dependabot[bot]' }}"
