name: a_Validate_PR_Changes

on:
  pull_request_target:
    paths:
      - "src/main/resources/messages_*.properties"

permissions:
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: audit
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Fetch PR changed files
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
        run: |
          echo "Fetching PR changed files..."
          gh repo set-default ${{ github.repository }}

          echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          BRANCH_NAME=$(echo "$BRANCH_NAME" | grep -E '^[a-zA-Z0-9._/-]+$' | grep -v -e '^\.\/' -e '\.\.' -e '^/$' -e '^-$')
          if [ -z "$BRANCH_NAME" ]; then
              echo "Ungültiger Branch-Name erkannt!"
              exit 1
          fi
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

          # Store files in a safe way, only allowing valid properties files
          echo "Getting list of changed files from PR..."
          # gh pr view ${{ github.event.pull_request.number }} --json files -q ".files[].path" > changed_files.txt
          gh pr view ${{ github.event.pull_request.number }} --json files -q ".files[].path" | grep -E '^src/main/resources/messages_[a-zA-Z_]+\.properties$' > changed_files.txt
          cat changed_files.txt
          echo "Processing changed files..."
          mapfile -t CHANGED_FILES < changed_files.txt
          CHANGED_FILES_STR="${CHANGED_FILES[*]}"
          echo "CHANGED_FILES=${CHANGED_FILES_STR}" >> $GITHUB_ENV

          echo "Changed files: ${CHANGED_FILES_STR}"

      - name: Determine reference file
        id: determine-file
        run: |
          echo "Determining reference file..."
          if grep -Fxq "src/main/resources/messages_en_GB.properties" changed_files.txt; then
              echo "Using PR branch reference file"
              echo "REFERENCE_FILE=src/main/resources/messages_en_GB.properties" >> $GITHUB_ENV
          else
              echo "Using main branch reference file"
              echo "REFERENCE_FILE=main/src/main/resources/messages_en_GB.properties" >> $GITHUB_ENV
          fi

      - name: Trigger secure workflow
        uses: actions/github-script@v7
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const fs = require('fs');

            // Lade die Liste der Dateien aus der Textdatei
            const files = fs.readFileSync('changed_files.txt', 'utf8');

            // Hole den Benutzer, der die PR geöffnet hat, aus dem Event-Kontext
            const actor = context.payload.pull_request.user.login;

            // Hole die Referenzdatei und PR-Nummer aus der Umgebungsvariablen
            const refFile = process.env.REFERENCE_FILE;
            const prNumber = process.env.PR_NUMBER;

            // Lade den Branch-Namen aus den Umgebungsvariablen
            const branchName = process.env.BRANCH_NAME;

            // Trigger den Workflow
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "secure-check.yml",
              ref: context.ref,
              inputs: {
                files: files,
                actor: actor,
                ref_file: refFile,
                pr_number: prNumber,
                branch_name: branchName
              }
            });
